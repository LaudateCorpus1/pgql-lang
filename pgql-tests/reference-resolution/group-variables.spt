module select

language pgql-lang

test Reference group variable in path (1) [[

  SELECT MIN([[n]].age) AS min, MIN(AVG([[e]].weight)) AS minAvg
    FROM g MATCH SHORTEST ( ([[n]]) -[ [[e]] ]->* (m) )

]] resolve #1 to #3
   resolve #2 to #4

test Reference group variable in path (2) [[

  SELECT MIN([[n]].age) AS min, MIN(AVG([[e]].weight)) AS avg
    FROM g MATCH SHORTEST ( ([[n]]) -[ [[e]] ]->* (m) )
   GROUP BY n.name AS nName

]] resolve #1 to #3
   resolve #2 to #4

test Reference group variable in path (3) [[

  SELECT MIN(AVG([[e]].weight)) AS minAvg
    FROM g MATCH SHORTEST ( (n) -[ [[e]] ]->* (m) )

]] resolve #1 to #2

test Mixed group and non-group variables [[

  SELECT MIN(AVG([[e1]].weight)) AS minAvg1
       , AVG([[e2]].weight) AS avg1
       , AVG([[e3]].weight) AS avg2
       , AVG(AVG([[e4]].weight)) AS avg3
       , AVG(AVG([[e5]].weight)) AS avg4
       , MIN(AVG([[e6]].weight)) AS minAvg2
    FROM g MATCH
           SHORTEST ( (n) -[ [[e1]] ]->* (m) )
         , SHORTEST ( (n) -[ [[e2]] ]-> (m) )
         , SHORTEST ( (n) -[ [[e3]] ]->? (m) )
         , SHORTEST ( (n) -[ [[e4]] ]->{0,1} (m) )
         , SHORTEST ( (n) -[ [[e5]] ]->{1} (m) )
         , SHORTEST ( (n) -[ [[e6]] ]->{1,2} (m) )

]] resolve #1 to #7
   resolve #2 to #8
   resolve #3 to #9
   resolve #4 to #10
   resolve #5 to #11
   resolve #6 to #12

test Group variable in WHERE [[

  SELECT MIN(AVG([[e]].weight)) AS minAvg
    FROM g MATCH SHORTEST ( (n) -[ [[e]] ]->* (m) )
   WHERE AVG([[e]].weight) > 1.1

]] resolve #1 to #2
   resolve #3 to #2

test Non-group variable in WHERE [[

  SELECT AVG([[e]].weight) AS avg
    FROM g MATCH SHORTEST ( (n) -[ [[e]] ]->? (m) )
   WHERE [[e]].weight > 1.1

]] resolve #1 to #2
   resolve #3 to #2

test Group variable in GROUP BY [[

    SELECT MIN(AVG([[e]].weight)) AS minAvg
      FROM g MATCH SHORTEST ( (n) -[ [[e]] ]->* (m) )
  GROUP BY AVG([[e]].weight) AS avg

]] resolve #1 to #2
   resolve #3 to #2

test Non-group variable in GROUP BY [[

    SELECT AVG([[e]].weight) AS avg
      FROM g MATCH SHORTEST ( (n) -[ [[e]] ]->? (m) )
  GROUP BY [[e]].weight AS weight

]] resolve #1 to #2
   resolve #3 to #2
