module basic

language pgql-lang

test Vertex from MATCH in SELECT [[

  SELECT [[n]], in_degree([[n]]) AS inDegree, [[n]].tax_rate * [[n]].salary AS tax_amount
    FROM g MATCH ([[n]])

]] resolve #1 to #5
   resolve #2 to #5
   resolve #3 to #5
   resolve #4 to #5

test Edge from MATCH in SELECT [[

  SELECT [[e]] AS e, label([[e]]) AS lbl, [[e]].weight AS weight
    FROM g MATCH (n) -[ [[e]]:likes ]-> (m)

]] resolve #1 to #4
   resolve #2 to #4
   resolve #3 to #4

test Vertex from MATCH in ORDER BY [[

    SELECT 123 AS x
      FROM g MATCH ([[n]])
  ORDER BY in_degree([[n]]), [[n]].tax_rate * [[n]].salary

]] resolve #2 to #1
   resolve #3 to #1
   resolve #4 to #1

test Edge from MATCH in ORDER BY [[

    SELECT 123 AS x
      FROM g MATCH (n) -[ [[e]]:likes ]-> (m)
  ORDER BY label([[e]]), [[e]].weight

]] resolve #2 to #1
   resolve #3 to #1

test Variable from SELECT in ORDER BY [[

    SELECT n.tax_rate * n.salary AS [[tax_amount]]
      FROM g MATCH (n)
  ORDER BY [[tax_amount]]

]] resolve #2 to #1

test Variable from GROUP BY in SELECT [[

    SELECT [[nAge]] AS age
      FROM g MATCH (n)
  GROUP BY n.age AS [[nAge]]

]] resolve #1 to #2

test Variable from MATCH in aggregation in SELECT #1 [[

  SELECT AVG([[n]].salary) AS avgSalary
    FROM g MATCH ([[n]])

]] resolve #1 to #2

test Variable from MATCH in aggregation in SELECT #2 [[

    SELECT AVG([[n]].salary) AS avgSalary
      FROM g MATCH ([[n]])
  GROUP BY n.age AS nAge

]] resolve #1 to #2

test Variable from MATCH in aggregation in ORDER BY #1 [[

    SELECT SUM(n.salary) AS sum
      FROM g MATCH ([[n]])
  ORDER BY AVG([[n]].salary)

]] resolve #2 to #1

test Variable from MATCH in aggregation in ORDER BY #2 [[

    SELECT nAge AS c1
      FROM g MATCH ([[n]])
  GROUP BY n.age AS nAge
  ORDER BY AVG([[n]].salary)

]] resolve #2 to #1

test Mixed aggregation and non-aggregation in SELECT [[

    SELECT n.age AS nAge2, AVG([[n]].salary) AS avg
      FROM g MATCH ([[n]])
  GROUP BY n.age AS nAge

]] resolve #1 to #2

test Mixed aggregation and non-aggregation in ORDER BY [[

    SELECT nAge AS c1
      FROM g MATCH ([[n]])
  GROUP BY n.age AS nAge
  ORDER BY AVG([[n]].salary), n.age

]] resolve #2 to #1


test Can't reference previous SELECT element [[

  SELECT x AS n, [[n]] AS c2
    FROM g MATCH (x) -> ([[n]])

]] resolve #1 to #2

test Can't reference previous GROUP BY element [[

  SELECT x AS c1
    FROM g MATCH (x) -> ([[n]])
  GROUP BY x AS n, [[n]]

]] resolve #2 to #1

test Reference variable defined in SELECT #1 [[

    SELECT n.age AS nAge, COUNT(*) as [[count]]
      FROM g MATCH (n)
  GROUP BY nAge
  ORDER BY [[count]]

]] resolve #2to #1

test Reference variable defined in SELECT #2 [[

  SELECT n.age AS [[nAge]]
    FROM g MATCH (n)
   WHERE nAge > 25
    HAVING [[nAge]] > 25
  ORDER BY [[nAge]]

]] resolve #2 to #1
   resolve #3 to #1

test Reference variable defined in SELECT #3 [[

  SELECT n.age AS [[nAge]]
    FROM g MATCH (n)
   WHERE nAge > 25
  GROUP BY [[nAge]]
    HAVING [[nAge]] > 25
  ORDER BY [[nAge]]

]] resolve #3 to #2
   resolve #4 to #1

test Variables in MATCH shadow variables in SELECT [[

    SELECT n.prop AS [[n]]
      FROM g MATCH ([[n]])
     WHERE [[n]].age > 25
  GROUP BY [[n]]
    HAVING [[n]].age > 25
  ORDER BY [[n]].age

]] resolve #3 to #2
   resolve #4 to #2
   resolve #5 to #4
   resolve #6 to #4

test Pass variable from SELECT to GROUP BY and back to SELECT [[

    SELECT n.age AS nAge, [[nAge]] * 2 AS doubleAge
      FROM g MATCH (n)
  GROUP BY [[nAge]]

]] resolve #1 to #2

test Resolve variables in property references (but not other variables) in ORDER BY to FROM before SELECT [[

   SELECT n.name AS [[n]]
     FROM g MATCH ([[n]])
  ORDER BY [[n]].age, [[n]]

]] resolve #3 to #2
   resolve #4 to #1

test Resolve variables in property references (but not other variables) in ORDER BY to FROM before SELECT #2 [[

    SELECT n.name AS [[n]]
      FROM g MATCH ([[n]])
  ORDER BY EXISTS ( SELECT m AS m MATCH (m) WHERE m.age = [[n]].age ), [[n]].age, [[n]]

 ]] resolve #3 to #2
    resolve #4 to #2
    resolve #5 to #1

test Resolve variables in property references (but not other variables) in ORDER BY and HAVING to GROUP BY before SELECT [[

    SELECT 123 AS n
      FROM g MATCH (n)
  GROUP BY [[n]]
    HAVING [[n]].prop > 3
  ORDER BY [[n]].prop

 ]] resolve #2 to #1
    resolve #3 to #1

test Implicit property reference [[

    SELECT n.[[prop]]
      FROM MATCH (n)
  ORDER BY [[prop]]

]] resolve #2 to #1

test Implicit property reference case insensitive [[

    SELECT DISTINCT emp.[[salary]]
      FROM MATCH (emp:Employee)
  ORDER BY [[SaLarY]] DESC

]] resolve #2 to #1
