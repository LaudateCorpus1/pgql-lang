module types

language pgql-lang

test Illegal vertex/edge aggregation [[

  SELECT [[MIN(n)]] AS min1, [[MIN(e)]] AS min2
       , [[MAX(n)]] AS max1, [[MAX(e)]] AS max2
       , [[AVG(n)]] AS avg1, [[AVG(e)]] AS avg2
       , [[SUM(n)]] AS sum1, [[SUM(e)]] AS sum2
       , [[ARRAY_AGG(n)]] AS array1, [[ARRAY_AGG(e)]] AS array2
       , [[LISTAGG(n)]] AS listagg1, [[LISTAGG(e)]] AS listagg2
    FROM MATCH (n) -[e]-> (m)

]] error like "The aggregate MIN is undefined for the argument type VERTEX" at #1
   error like "The aggregate MIN is undefined for the argument type EDGE" at #2
   error like "The aggregate MAX is undefined for the argument type VERTEX" at #3
   error like "The aggregate MAX is undefined for the argument type EDGE" at #4
   error like "The aggregate AVG is undefined for the argument type VERTEX" at #5
   error like "The aggregate AVG is undefined for the argument type EDGE" at #6
   error like "The aggregate SUM is undefined for the argument type VERTEX" at #7
   error like "The aggregate SUM is undefined for the argument type EDGE" at #8
   error like "The aggregate ARRAY_AGG is undefined for the argument type VERTEX" at #9
   error like "The aggregate ARRAY_AGG is undefined for the argument type EDGE" at #10
   error like "The aggregate LISTAGG is undefined for the argument type VERTEX" at #11
   error like "The aggregate LISTAGG is undefined for the argument type EDGE" at #12

/* TODO: move to type system tests
test Vertex/edge where boolean expected [[

  SELECT n
    FROM g MATCH (n) -[e]-> (m)
   WHERE NOT [[n]]
     AND NOT [[e]]
     AND (true AND [[n]])
     AND (true AND [[e]])
     AND (true OR [[n]])
     AND (true OR [[e]])

]] error like "Boolean expected here" at #1, #2, #3, #4, #5, #6

test Vertex/edge where numeric expected [[

  SELECT n AS c1
    FROM g MATCH (n) -[e]-> (m)
   WHERE -[[n]] > 42
     AND -[[e]] > 42
     AND 1 - [[n]] > 42
     AND 1 - [[e]] > 42
     AND 1 + [[n]] > 42
     AND 1 + [[e]] > 42
     AND 1 * [[n]] > 42
     AND 1 * [[e]] > 42
     AND 1 / [[n]] > 42
     AND 1 / [[e]] > 42
     AND 1 % [[n]] > 42
     AND 1 % [[e]] > 42

]] error like "Numeric expected here" at #1, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12

test Illegal vertex/edge comparison [[

  SELECT n AS c1
    FROM g MATCH (n) -[e]-> (m)
   WHERE [[n < m]]
     AND [[e < 42]]
     AND [[n > m]]
     AND [[e > 42]]
     AND [[n <= m]]
     AND [[e <= 42]]
     AND [[n >= m]]
     AND [[e >= 42]]

]] error like "Comparison not allowed because no order is defined for vertices" at #1, #3, #5, #7
   error like "Comparison not allowed because no order is defined for edges" at #2, #4, #6, #8

test Illegal array comparison [[

  SELECT [[ARRAY_AGG(n.prop1) < ARRAY_AGG(n.prop2)]] AS v1
       , [[ARRAY_AGG(n.prop1) <= ARRAY_AGG(n.prop2)]] AS v2
       , [[ARRAY_AGG(n.prop1) > ARRAY_AGG(n.prop2)]] AS v3
       , [[ARRAY_AGG(n.prop1) >= ARRAY_AGG(n.prop2)]] AS v4
    FROM g MATCH (n) -[e]-> (m)

]] error like "Comparison not allowed because no order is defined for arrays" at #1, #2, #3, #4

test Illegal array aggregation [[

  SELECT MIN([[ARRAY_AGG(e.weight)]]) AS min
       , MAX([[ARRAY_AGG(e.weight)]]) AS max
       , AVG([[ARRAY_AGG(e.weight)]]) AS avg
       , SUM([[ARRAY_AGG(e.weight)]]) AS sum
       , ARRAY_AGG([[ARRAY_AGG(e.weight)]]) AS array
    FROM g MATCH SHORTEST ( (n) -[e]->* (m) )

]] error like "Aggregate does not allow array input" at #1, #2, #3, #4, #5
*/